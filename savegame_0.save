{
    "commonElements": {
        "ID_PERSISTENT_MANAGER": {
            "Time": 8280.96,
            "Percent": 23.5,
            "Purge": 3433.822,
            "CurrentZone": "Z02",
            "CurrentDomain": "D02",
            "HasBackup": false,
            "Corrupted": false,
            "debugName": "Manager",
            "$type": "Framework.Managers.PersistentManager+PersitentPersistenceData"
        },
        "ID_EVENT_MANAGER": {
            "flags": {
                "RESCUED_CHERUB_01": false,
                "RESCUED_CHERUB_02": false,
                "RESCUED_CHERUB_03": false,
                "RESCUED_CHERUB_04": false,
                "RESCUED_CHERUB_05": false,
                "RESCUED_CHERUB_06": false,
                "RESCUED_CHERUB_07": true,
                "RESCUED_CHERUB_08": false,
                "RESCUED_CHERUB_09": true,
                "RESCUED_CHERUB_10": true,
                "RESCUED_CHERUB_11": false,
                "RESCUED_CHERUB_12": false,
                "RESCUED_CHERUB_13": false,
                "RESCUED_CHERUB_14": false,
                "RESCUED_CHERUB_15": false,
                "RESCUED_CHERUB_16": false,
                "RESCUED_CHERUB_17": false,
                "RESCUED_CHERUB_18": false,
                "RESCUED_CHERUB_19": false,
                "RESCUED_CHERUB_20": false,
                "RESCUED_CHERUB_21": false,
                "RESCUED_CHERUB_22": false,
                "RESCUED_CHERUB_23": false,
                "RESCUED_CHERUB_24": false,
                "RESCUED_CHERUB_25": false,
                "RESCUED_CHERUB_26": false,
                "RESCUED_CHERUB_27": false,
                "RESCUED_CHERUB_28": false,
                "RESCUED_CHERUB_29": false,
                "RESCUED_CHERUB_30": false,
                "RESCUED_CHERUB_31": false,
                "RESCUED_CHERUB_32": false,
                "RESCUED_CHERUB_33": false,
                "RESCUED_CHERUB_34": false,
                "RESCUED_CHERUB_35": false,
                "RESCUED_CHERUB_36": false,
                "RESCUED_CHERUB_37": false,
                "RESCUED_CHERUB_38": false,
                "CLAIMED_CO01": false,
                "CLAIMED_CO02": false,
                "CLAIMED_CO03": false,
                "CLAIMED_CO04": false,
                "CLAIMED_CO05": false,
                "CLAIMED_CO06": false,
                "CLAIMED_CO07": false,
                "CLAIMED_CO08": false,
                "CLAIMED_CO09": false,
                "CLAIMED_CO10": false,
                "CLAIMED_CO11": false,
                "CLAIMED_CO12": false,
                "CLAIMED_CO13": false,
                "CLAIMED_CO14": false,
                "CLAIMED_CO15": false,
                "CLAIMED_CO16": false,
                "CLAIMED_CO17": false,
                "CLAIMED_CO18": false,
                "CLAIMED_CO19": false,
                "CLAIMED_CO20": false,
                "CLAIMED_CO21": false,
                "CLAIMED_CO22": false,
                "CLAIMED_CO23": false,
                "CLAIMED_CO24": false,
                "CLAIMED_CO25": false,
                "CLAIMED_CO26": false,
                "CLAIMED_CO27": false,
                "CLAIMED_CO28": false,
                "CLAIMED_CO29": false,
                "CLAIMED_CO30": false,
                "CLAIMED_CO31": false,
                "CLAIMED_CO32": false,
                "CLAIMED_CO33": false,
                "CLAIMED_CO34": false,
                "CLAIMED_CO35": false,
                "CLAIMED_CO36": false,
                "CLAIMED_CO37": false,
                "CLAIMED_CO38": false,
                "CLAIMED_CO39": false,
                "CLAIMED_CO40": false,
                "CLAIMED_CO41": false,
                "CLAIMED_CO42": false,
                "CLAIMED_CO43": false,
                "CLAIMED_CO44": false,
                "CONFESSOR_1_DESTROYED": false,
                "CONFESSOR_2_DESTROYED": false,
                "CONFESSOR_3_DESTROYED": false,
                "CONFESSOR_4_DESTROYED": false,
                "CONFESSOR_5_DESTROYED": false,
                "CONFESSOR_6_DESTROYED": false,
                "CONFESSOR_7_DESTROYED": false,
                "CONFESSOR_1_ARENACOMPLETED": false,
                "CONFESSOR_2_ARENACOMPLETED": false,
                "CONFESSOR_3_ARENACOMPLETED": false,
                "CONFESSOR_4_ARENACOMPLETED": false,
                "CONFESSOR_5_ARENACOMPLETED": false,
                "CONFESSOR_6_ARENACOMPLETED": false,
                "CONFESSOR_7_ARENACOMPLETED": false,
                "CONFESSOR_1_CHECKITEM": false,
                "CONFESSOR_2_CHECKITEM": false,
                "CONFESSOR_3_CHECKITEM": false,
                "CONFESSOR_4_CHECKITEM": false,
                "CONFESSOR_5_CHECKITEM": false,
                "CONFESSOR_6_CHECKITEM": false,
                "CONFESSOR_7_CHECKITEM": false,
                "D01Z01S04_ARENA": false,
                "D01Z02S03_ELEVATOR": false,
                "D01Z02S01_FOUNTAIN": false,
                "D01Z02S03_ELEVATOR_IN_ALBERO": false,
                "D01Z02S07_TELEPORT_ALBERO": true,
                "D01Z02S02_SECRETWALL": false,
                "LEFT_OSSUARY_GROUP": false,
                "RIGHT_OSSUARY_GROUP": false,
                "TOP_OSSUARY_GROUP": false,
                "D01Z03S01_TREEPATH": true,
                "D01Z04S11_CHESTTRIGGER": true,
                "D01Z05S13_REEKLEADERKILLED": false,
                "D01Z05S02_ELEVATORPATHOPENED": false,
                "D01Z05S12_SHORTCUTGATESEWERS": false,
                "D01Z05S23_CHALICEPUZZLE": false,
                "D01Z05S21_PUZZLESOLVED": false,
                "D01Z05S21_LEFTSHOW1": false,
                "D01Z05S21_LEFTSHOW2": false,
                "D01Z05S21_LEFTSHOW3": false,
                "D01Z05S21_LEFTSHOW4": false,
                "D01Z05S21_RIGHTSHOW1": false,
                "D01Z05S21_RIGHTSHOW2": false,
                "D01Z05S21_RIGHTSHOW3": false,
                "D01Z05S21_RIGHTSHOW4": false,
                "D01Z05S21_RIGHTSHOWNONE": true,
                "D01Z05S21_LEFTSHOWNONE": true,
                "ROLLER_CHALICE_DEAD": false,
                "LIONHEAD_CHALICE_DEAD": false,
                "ISABEL_CHALICE_DEAD": false,
                "D01Z06S01_BOSSDEAD": true,
                "D02Z01S01_CAVEEXIT": false,
                "D02Z03S01_SHORTCUTOPENED": false,
                "D02Z03S02_ARCHDEACONROOM": false,
                "D02Z03S19_ARCHDEACON3ITEMTAKEN": false,
                "D02Z03S19_ARCHDEACON3VISITED": false,
                "D02Z05S01_BOSSDEAD": false,
                "D02Z05S01_ELEVATOR1_ON_BOTTOM": false,
                "D02Z05S01_ELEVATOR2_ON_BOTTOM": false,
                "D02Z05S01_ELEVATOR1_ENABLED": false,
                "D03Z01S02_BELLCARRIER": false,
                "D03Z01S01_HIDDENWALL": false,
                "D03Z02S13_CHALLENGEOVER": false,
                "D03Z03S12_GHOSTARENA": false,
                "D03Z03S03_GHOSTKNIGHT": false,
                "D03Z03S05_MIXEDCOMBATROUND1_TOP": false,
                "D03Z03S05_MIXEDCOMBATROUND2_TOP": false,
                "D03Z04S01_BOSSDEAD": false,
                "D03Z04S01_GATEISOPEN": false,
                "D03Z05S01_ELEVATOR_ON_BOTTOM": false,
                "D04Z01S01_GROUNDTRAP1": false,
                "D04Z01S01_GROUNDTRAP2": false,
                "D04Z01S02_GROUNDTRAP1": false,
                "D04Z01S02_GROUNDTRAP2": false,
                "D04Z01S03_GROUNDTRAP1": false,
                "D04Z01S03_SECRETPASSAGE": false,
                "D04Z02S10_SECRETWALL": false,
                "D04Z02S15_BLOODGATE": false,
                "D04Z02S17_ARCHDEACON1ITEMTAKEN": false,
                "D04Z02S17_ARCHDEACON1VISITED": false,
                "D04Z02S06_LADDERUNFOLDED": false,
                "D04Z04S01_BOSSDEAD": false,
                "D04Z04S01_DREAMVISITED": false,
                "D05Z01S13_BOSSDEAD": false,
                "D05Z01S02_PASSAGEOPENED": false,
                "D05Z01S02_PASSAGEUNVEILED": false,
                "D05Z01S11_GHOST": false,
                "D05Z01S10_LIBRARYPLATFORM1": false,
                "D05Z01S10_LIBRARYPLATFORM2": false,
                "D05Z01S02_PLATFORMBOTTOM": false,
                "D05Z01S02_PLATFORMTOP": false,
                "D05Z01S04_PLATFORMBOTTOM": false,
                "D05Z01S04_PLATFORMTOP": false,
                "D05Z01S07_PLATFORMBOTTOM": false,
                "D05Z01S07_PLATFORMTOP": false,
                "D05Z02S06_GATESTATE": false,
                "D05Z01S15_ARCHDEACON2ITEMTAKEN": false,
                "D05Z01S15_ARCHDEACON2VISITED": false,
                "D05Z01S09_RIDDLESOLVED": false,
                "D05Z01S10_LEVERUSED": false,
                "D05Z02S09_RIDDLESOLVED": false,
                "D05Z04S01_ELEVATOR_ON_BOTTOM": false,
                "ELEVATOR_POSITION_1": false,
                "ELEVATOR_POSITION_2": false,
                "ELEVATOR_POSITION_3": false,
                "ELEVATOR_POSITION_4": false,
                "ELEVATOR_POSITION_FAKE": false,
                "ELEVATOR_POSITION_2_UNLOCKED": false,
                "ELEVATOR_POSITION_3_UNLOCKED": false,
                "ELEVATOR_FULL_UNLOCKED": false,
                "D06Z01S03_COMBATCOMPLETED": false,
                "D06Z01S20_COMBATCOMPLETED": false,
                "D06Z01S06A_COMBATCOMPLETED": false,
                "D06Z01S06B_COMBATCOMPLETED": false,
                "D06Z01S21_COMBATCOMPLETED": false,
                "D06Z01S25_BOSSDEAD": false,
                "D06Z01S23_LADDERUNFOLDED": false,
                "D07Z01S02_BOSSDEAD": false,
                "D07Z01S03_ENDING_A": false,
                "D08Z01S01_BOSSDEAD": false,
                "D09Z01S03_BOSSDEAD": false,
                "D09Z01S01_BROSDEAD": false,
                "D09Z01S02_PRISONELEVATORBOTTOM": false,
                "D09Z01S08_PRISONELEVATORBOTTOM": false,
                "D09Z01S09_PRISONELEVATOR1BOTTOM": false,
                "D09Z01S09_PRISONELEVATOR2BOTTOM": false,
                "D09Z01S10_PRISONELEVATOR1BOTTOM": false,
                "D09Z01S10_PRISONELEVATOR2BOTTOM": false,
                "D09Z01S02_GATERIDDLE": false,
                "D09Z01S08_AMBUSHOVER": false,
                "D09Z01S08_WALLDESTROYED": false,
                "D09Z01S08_GROUNDDESTROYED": false,
                "D09Z01S10_ELEVATORUSED": false,
                "D09BZ01S01_CELL22GROUND": false,
                "D13Z01S01_CONTROLLER": false,
                "D17Z01_BOSSDEAD": true,
                "D17Z01S04_WALLDESTROYED": false,
                "D17Z01S04_SHORTCUT": false,
                "D17Z01S01_INTRO": true,
                "D17Z01S10_RIDDLEDOOR1": false,
                "D17Z01S10_RIDDLEDOOR2": false,
                "D17Z01S10_RIDDLEDOOR3": false,
                "D19Z01S01_PLAYER_DIED": false,
                "D19Z01S02_PLAYER_DIED": false,
                "D19Z01S03_PLAYER_DIED": false,
                "D19Z01S04_PLAYER_DIED": false,
                "D19Z01S05_PLAYER_DIED": false,
                "D19Z01S06_PLAYER_DIED": false,
                "D19Z01S07_PLAYER_DIED": false,
                "DEBUG_ENDING_A": false,
                "MEACULPACHALLENGE1": false,
                "DOOR_ATTRITION_1_OPENED": false,
                "DOOR_ATTRITION_2_OPENED": false,
                "BELL_PUZZLE1_ACTIVATED": false,
                "BELL_PUZZLE2_ACTIVATED": false,
                "BELL_ACTIVATED": false,
                "MEACULPA_CUTSCENE_PLAYED": true,
                "TELEPORT_D17_DISCOVERED": false,
                "TELEPORT_D01_DISCOVERED": true,
                "TELEPORT_D02_DISCOVERED": true,
                "TELEPORT_D05_DISCOVERED": false,
                "TELEPORT_D06_DISCOVERED": false,
                "WC_D01Z01S07_THEHOLYLINE": true,
                "WC_D01Z02S01_ALBERO": true,
                "WC_D01Z03S01_WASTELAND": true,
                "WC_D01Z04S01_MERCY": true,
                "WC_D01Z05S19_DESECRATED": true,
                "WC_D02Z01S01_WHERETHEOLIVETREESWITHER": true,
                "WC_D02Z02S01_GRAVEYARDOFTHEPEAKS": true,
                "WC_D02Z03S01_CONVENT": false,
                "WC_D03Z01S01_HIGHMOUNTAINRANGES": false,
                "WC_D03Z02S01_JONDO": false,
                "WC_D03Z03S01_GRIEVANCEASCENDS": false,
                "WC_D04Z01S01_COURTYARD": false,
                "WC_D04Z02S01_MOTHEROFMOTHERS": false,
                "WC_D05Z01S01_LIBRARY": false,
                "WC_D05Z01S01_WHERETHECANVASESSLEEP": false,
                "WC_D06Z01S02_ROOFTOPS": false,
                "WC_D07Z01S01_DOME": false,
                "WC_D08Z01S01_BRIDGE": false,
                "WC_D09Z01S01_HOLYPROHIBITIONS": false,
                "BAPTISMAL_01_USED": false,
                "BAPTISMAL_02_USED": false,
                "BAPTISMAL_03_USED": false,
                "BAPTISMAL_04_USED": false,
                "BAPTISMAL_05_USED": false,
                "BAPTISMAL_06_USED": false,
                "CANDLE_RED_1_USED": false,
                "CANDLE_RED_2_USED": false,
                "CANDLE_BLUE_1_USED": false,
                "CANDLE_BLUE_2_USED": false,
                "TUTORIAL_JUMP": true,
                "TUTORIAL_LADDER": true,
                "TUTORIAL_FLOORDOWN": true,
                "TUTORIAL_DASH": true,
                "TUTORIAL_WALLCLIMB": false,
                "TUTORIAL_GATE": true,
                "TUTORIAL_FERVOR": false,
                "TUTORIAL_ATTACK": true,
                "POPUP_PRIEDIEU": false,
                "TUTORIAL_INVENTORY": false,
                "ATTRITION_ALTAR_DONE": true,
                "COMPUNCTION_ALTAR_DONE": false,
                "CONTRITION_ALTAR_DONE": false,
                "BROTHERHOOD_DIALOG1_DONE": false,
                "BROTHERHOOD_DIALOG2_DONE": false,
                "BROTHERHOOD_DIALOG3_DONE": false,
                "BROTHERHOOD_CUTSCENE1_DONE": false,
                "BROTHERHOOD_CUTSCENE2_DONE": false,
                "GOLDENHEAD_FIRST_FOUND_DONE": true,
                "DEOSGRACIAS_CUTSCENE_PLAYED": true,
                "DEOSGRACIAS_KEY_DONE": false,
                "DEOSGRACIAS_ATTRITION_DONE": true,
                "DEOSGRACIAS_CONTRITION_DONE": false,
                "DEOSGRACIAS_COMPUNCTION_DONE": false,
                "DEOSGRACIAS_BROTHERS_DONE": false,
                "DEOSGRACIAS_CRISANTA_DONE": false,
                "DEOSGRACIAS_QUIRCE_DONE": false,
                "DEOSGRACIAS_ABNEGATION_DONE": false,
                "DEOSGRACIAS_MOUNTAINS_DONE": false,
                "DEOSGRACIAS_ABNEGATION_VISITED": false,
                "REDENTO_LOCATION_2": false,
                "REDENTO_LOCATION_3": false,
                "REDENTO_LOCATION_4": false,
                "REDENTO_LOCATION_5": false,
                "REDENTO_PATH1_UNLOCKED": false,
                "REDENTO_PATH2_UNLOCKED": false,
                "REDENTO_PATH3_UNLOCKED": false,
                "REDENTO_PATH4_UNLOCKED": false,
                "REDENTO_PATH5_UNLOCKED": false,
                "REDENTO_FIRSTCONVERSATION_DONE": false,
                "REDENTO_0203_DONE": false,
                "REDENTO_0204_DONE": false,
                "REDENTO_0205_DONE": false,
                "REDENTO_0206_DONE": false,
                "REDENTO_0207_DONE": false,
                "REDENTO_0209_DONE": false,
                "REDENTO_0210_DONE": false,
                "REDENTO_0211_DONE": false,
                "REDENTO_0214_DONE": false,
                "REDENTO_STATUE_DISCOVERED": false,
                "REDENTO_DEAD": false,
                "REDENTO_CAVE_ITEM_OWNED": false,
                "REDENTO_CLEOFAS_DONE": false,
                "REDENTO_BODY_DISCOVERED": false,
                "REDENTO_QI54_USED": false,
                "TIRSO_PIETY_FILTERED": true,
                "TIRSO_ANGUISH_FILTERED": false,
                "TIRSO_BURNTFACE_FILTERED": false,
                "TIRSO_BEJEWELED_FILTERED": false,
                "TIRSO_BLINDBABY_FILTERED": false,
                "TIRSO_QUIRCE_FILTERED": false,
                "TIRSO_QI19_DELIVERED": false,
                "TIRSO_QI20_DELIVERED": false,
                "TIRSO_QI37_DELIVERED": false,
                "TIRSO_QI63_DELIVERED": false,
                "TIRSO_QI64_DELIVERED": false,
                "TIRSO_QI65_DELIVERED": true,
                "TIRSO_ITEMS_USED_1": false,
                "TIRSO_ITEMS_USED_2": false,
                "TIRSO_ITEMS_USED_3": false,
                "TIRSO_ITEMS_USED_4": false,
                "TIRSO_ITEMS_USED_5": false,
                "TIRSO_ITEMS_USED_6": false,
                "TIRSO_KISSER1_DEAD": true,
                "TIRSO_KISSER2_DEAD": false,
                "TIRSO_KISSER3_DEAD": false,
                "TIRSO_KISSER4_DEAD": false,
                "TIRSO_KISSER5_DEAD": false,
                "TIRSO_TIRSO_DEAD": false,
                "TIRSO_FIRSTCONVERSATION_DONE": true,
                "TIRSO_HEART_DONE": false,
                "TIRSO_FIRSTREWARD_DONE": true,
                "TIRSO_LASTREWARD_DONE": false,
                "PENITENT_MET_LVDOVICO": true,
                "LVDOVICO_FIRST_OFFER_DONE": false,
                "LVDOVICO_SECOND_OFFER_DONE": false,
                "LVDOVICO_MIDOFFERING_CONVERSATION": false,
                "LVDOVICO_QUEST_DONE": false,
                "LVDOVICO_CLEOFAS_DONE": false,
                "DAGGER_ENCOUNTER_1_DONE": false,
                "DAGGER_ENCOUNTER_2_DONE": false,
                "DAGGER_ENCOUNTER_3_DONE": false,
                "DAGGER_ENCOUNTER_4_DONE": false,
                "DAGGER_ENCOUNTER_5_DONE": false,
                "DAGGER_ENCOUNTER_6_DONE": false,
                "DAGGER_CUTSCENE_FINISHED": false,
                "VIRIDIANA_IS_HELPING": false,
                "VIRIDIANA_DEAD": false,
                "VIRIDIANA_MATURE": true,
                "VIRIDIANA_OLD": false,
                "VIRIDIANA_LESS_HEALING": false,
                "VIRIDIANA_FIRSTCONVERSATION_DONE": true,
                "VIRIDIANA_DEAD_BOSS01": false,
                "VIRIDIANA_DEAD_BOSS02": false,
                "VIRIDIANA_DEAD_BOSS03": false,
                "VIRIDIANA_DEAD_BOSS04": false,
                "VIRIDIANA_DEAD_BOSS05": false,
                "VIRIDIANA_HE08_CONVERSATION_DONE": false,
                "VIRIDIANA_FIGHT_VANISHED": false,
                "GEMINO_FIRST_CONVERSATION_DONE": true,
                "GEMINO_ENTRANCE_OPEN": false,
                "GEMINO_FROZEN": false,
                "GEMINO_PIETY_DEAD": true,
                "GEMINO_ANGUISH_DEAD": false,
                "GEMINO_TREE_ENDING": false,
                "GEMINO_QI57_OWNED": false,
                "GEMINO_TOMB_OPEN": false,
                "GEMINO_FIRSTENCOUNTER_DONE": true,
                "BROTHERS_EVENT1_COMPLETED": true,
                "BROTHERS_EVENT2_COMPLETED": false,
                "BROTHERS_EVENTPERPETVA_COMPLETED": false,
                "BROTHERS_GRAVEYARD_EVENT": false,
                "BROTHERS_WASTELAND_EVENT": true,
                "CLEOFAS_JOINED_ORDER": false,
                "CLEOFAS_QUEST_FINISHED": false,
                "PENITENT_MET_CLEOFAS": false,
                "SOCORRO_STATE_OFFERING": false,
                "SOCORRO_STATE_GONE": false,
                "SOCORRO_STATE_KILLED": false,
                "CLEOFAS_REMEMBER": false,
                "CLEOFAS_BURYING": false,
                "CLEOFAS_CRYING": false,
                "CLEOFAS_DLG_0903_DONE": false,
                "CLEOFAS_READY_TO_SUICIDE": false,
                "CLEOFAS_JAIL_FIRST_CONVERSATION_DONE": false,
                "CLEOFAS_CORRUPTED_PATH": false,
                "CLEOFAS_DEAD": false,
                "SOCORRO_FIRST_OFFERING": false,
                "SOCORRO_SECOND_OFFERING": false,
                "CLEOFAS_DEATHSFX_DONE": false,
                "CANDELARIA_FIRST_CONVERSATION_DONE": true,
                "CANDELARIA_FAKEITEM_DONE": false,
                "QI11_USED": false,
                "SERENO_FIRSTCONVERSATION_DONE": false,
                "SERENO_REWARD_TAKEN": false,
                "LOTL_FIRSTCONVERSATION_DONE": false,
                "LOTL_1OFFERING_DONE": false,
                "LOTL_2OFFERING_DONE": false,
                "LOTL_3OFFERING_DONE": false,
                "LOTL_LAKE_VISITED": false,
                "LOTL_ALLOFFERINGS": false,
                "MOONCHILD_MIN_CHERUBS": false,
                "MOONCHILD_TOTAL_CHERUBS": false,
                "MOONCHILD_MINCHERUBS_DONE": false,
                "MOONCHILD_FIRSTENCOUNTER_DONE": false,
                "MOONCHILD_PREVIOUSROOM_D18": false,
                "ALTASGRACIAS_EGG_BROKEN": false,
                "ALTASGRACIAS_QI14_CONVERSATION_DONE": false,
                "ALTASGRACIAS_ALTAR1_QI10": false,
                "ALTASGRACIAS_ALTAR1_QI11": false,
                "ALTASGRACIAS_ALTAR1_QI12": false,
                "ALTASGRACIAS_ALTAR2_QI10": false,
                "ALTASGRACIAS_ALTAR2_QI11": false,
                "ALTASGRACIAS_ALTAR2_QI12": false,
                "ALTASGRACIAS_ALTAR3_QI10": false,
                "ALTASGRACIAS_ALTAR3_QI11": false,
                "ALTASGRACIAS_ALTAR3_QI12": false,
                "ALTASGRACIAS_FIRST_OFFERING": false,
                "ALTASGRACIAS_SECOND_OFFERING": false,
                "ALTASGRACIAS_EGG_OFFERED": false,
                "NAZARIO_FIRST_CONVERSATION_DONE": false,
                "ALL_HABILITIES_PURCHASED": false,
                "NAZARIO_DEAD": false,
                "SWORD_UPGRADED_MC01": false,
                "SWORD_UPGRADED_MC02": true,
                "SWORD_UPGRADED_MC03": false,
                "SWORD_UPGRADED_MC04": false,
                "SWORD_UPGRADED_MC05": false,
                "SWORD_UPGRADED_MC06": false,
                "SWORD_UPGRADED_MC07": false,
                "NAZARIO_HE08_CONVERSATION_DONE": false,
                "HEART_FIRST_CONVERSATION_DONE": false,
                "HEART_QUEST_STARTED": false,
                "HEART_ESSENCE_GIVEN_1": false,
                "HEART_ESSENCE_GIVEN_2": false,
                "HEART_ESSENCE_GIVEN_3": false,
                "HEART_ESSENCE_GIVEN_ALL": false,
                "CORPSES_01_FINISHED": false,
                "CORPSES_02_FINISHED": false,
                "CORPSES_03_FINISHED": false,
                "CORPSES_04_FINISHED": false,
                "CORPSES_05_FINISHED": false,
                "CORPSES_06_FINISHED": false,
                "CORPSES_07_FINISHED": false,
                "CORPSES_08_FINISHED": false,
                "CORPSES_09_FINISHED": false,
                "CORPSES_10_FINISHED": false,
                "CORPSES_11_FINISHED": false,
                "CORPSES_12_FINISHED": false,
                "CORPSES_13_FINISHED": false,
                "CORPSES_14_FINISHED": false,
                "CORPSES_15_FINISHED": false,
                "CORPSES_16_FINISHED": false,
                "CORPSES_17_FINISHED": false,
                "CORPSES_18_FINISHED": false,
                "CORPSES_19_FINISHED": false,
                "CORPSES_20_FINISHED": false,
                "CORPSES_21_FINISHED": false,
                "CORPSES_22_FINISHED": false,
                "CORPSES_23_FINISHED": false,
                "CORPSES_24_FINISHED": false,
                "CORPSES_25_FINISHED": false,
                "CORPSES_26_FINISHED": false,
                "QI41_USED": false,
                "QI45_USED": false,
                "QI46_USED": false,
                "QI47_USED": false,
                "QI48_USED": false,
                "QI49_USED": false,
                "QI50_USED": false,
                "QI51_USED": false,
                "PONTIFF_ALBERO_EVENT": true,
                "PONTIFF_BRIDGE_EVENT": false,
                "PONTIFF_ARCHDEACON1_EVENT": false,
                "PONTIFF_ARCHDEACON2_EVENT": false,
                "PONTIFF_KEY1_USED": false,
                "PONTIFF_KEY2_USED": false,
                "PONTIFF_KEY3_USED": false,
                "PONTIFF_CUTSCENE_PLAYED": false,
                "CHERUB_RESPAWN": false,
                "WARDEN_KILLED": true,
                "D17Z01S11_BOSSDEAD_AC43": true,
                "ZONE_NAME_OF_D01Z01_DISPLAYED": true,
                "QI31_OWNED": true,
                "PROSELYTE_KILLED": true,
                "ZEALOT_KILLED": true,
                "PR14_OWNED": true,
                "FORGOTTENWAIL_KILLED": true,
                "ZONE_NAME_OF_D01Z02_DISPLAYED": true,
                "RB01_OWNED": true,
                "CO16_OWNED": true,
                "ZONE_NAME_OF_D01Z03_DISPLAYED": true,
                "CRUCIFIED_KILLED": true,
                "DAMNED_KILLED": true,
                "SHIELDMAIDEN_KILLED": true,
                "GUARDAINFANTE_KILLED": true,
                "RB04_OWNED": true,
                "CO36_OWNED": true,
                "ZONE_NAME_OF_D01Z04_DISPLAYED": true,
                "ACOLYTE_KILLED": true,
                "FLAGELLANT_KILLED": true,
                "CO30_OWNED": true,
                "WRAITH_KILLED": true,
                "PR01_OWNED": true,
                "SPEAR_OF_THE_CATHEDRA_KILLED": true,
                "CO03_OWNED": true,
                "QI58_OWNED": true,
                "RB09_OWNED": true,
                "ACOLYTE_EXECUTED_FOR_AC27": true,
                "QI48_OWNED": true,
                "PIETY_KILLED": true,
                "D01Z04S18_BOSSDEAD_AC43": true,
                "QI38_OWNED": true,
                "ZONE_NAME_OF_D01Z05_DISPLAYED": true,
                "CO38_OWNED": true,
                "QI65_OWNED": true,
                "QI66_OWNED": true,
                "HE02_OWNED": true,
                "SHIELDMAIDEN_EXECUTED_FOR_AC27": true,
                "ZONE_NAME_OF_D02Z01_DISPLAYED": true,
                "CO11_OWNED": true,
                "QI59_OWNED": true,
                "DESOLLADO_KILLED": true,
                "QI20_OWNED": true,
                "FLAGELLANT_EXECUTED_FOR_AC27": true,
                "RESTLESSBONES_KILLED": true,
                "BELLIDO_KILLED": true,
                "ZONE_NAME_OF_D02Z02_DISPLAYED": true,
                "CIMBALILLO_KILLED": true,
                "QI07_OWNED": true,
                "WANDERINGSEPULCHER_KILLED": true,
                "WAKEFULALCOVE_KILLED": true
            },
            "debugName": "Manager",
            "$type": "Framework.Managers.EventManager+FlagPersistenceData"
        },
        "ID_INVENTORY": {
            "ownRellics": [],
            "wearRellics": [
                "",
                "",
                ""
            ],
            "ownBeads": [
                "RB01",
                "RB04",
                "RB09"
            ],
            "wearBeads": [
                "RB01",
                "RB04",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "ownQuestItems": [
                "QI31",
                "QI58",
                "QI48",
                "QI38",
                "QI66",
                "QI59",
                "QI20",
                "QI07"
            ],
            "ownCollectibleItems": [
                "CO16",
                "CO36",
                "CO30",
                "CO03",
                "CO38",
                "CO11"
            ],
            "ownPrayers": [
                "PR14",
                "PR01"
            ],
            "wearPrayers": [
                "PR14"
            ],
            "prayerDecipher": {

            },
            "ownSwords": [
                "HE02"
            ],
            "wearSwords": [
                "HE02"
            ],
            "keys": [
                false,
                true,
                false
            ],
            "debugName": "Manager",
            "$type": "Framework.Managers.InventoryManager+InventoryPersistenceData"
        },
        "ID_CHECKPOINT_MANAGER": {
            "activePrieDieuScene": "D02Z02S08",
            "activePrieDieuId": "5bd1a831-b47e-4303-b898-c3ba367a857a",
            "pendingSpawn": "Door",
            "spawnId": "SW",
            "activeTeleports": [
                "TELEPORT_D01",
                "TELEPORT_D02"
            ],
            "debugName": "Manager",
            "$type": "Framework.Managers.SpawnManager+CheckPointPersistenceData"
        },
        "ID_ACHIEVEMENTS_MANAGER": {
            "achievements": [
                {
                    "Id": "AC01",
                    "Progress": 100.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC02",
                    "Progress": 100.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC03",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC04",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC05",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC06",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC07",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC08",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC09",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC10",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC11",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC12",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC13",
                    "Progress": 7.894737,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC14",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC15",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC16",
                    "Progress": 15.38461,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC17",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC18",
                    "Progress": 9.67742,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC19",
                    "Progress": 13.63636,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC20",
                    "Progress": 11.11111,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC21",
                    "Progress": 33.33334,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC22",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC23",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC24",
                    "Progress": 14.3,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC25",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC26",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC27",
                    "Progress": 60.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC28",
                    "Progress": 100.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC29",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC30",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC31",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC32",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC33",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC34",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC35",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC36",
                    "Progress": 22.24,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC37",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC38",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC39",
                    "Progress": 32.75863,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC40",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC41",
                    "Progress": 41.74177,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC42",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC43",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC44",
                    "Progress": 0.0,
                    "Name": null,
                    "Description": null
                },
                {
                    "Id": "AC46",
                    "Progress": 23.5,
                    "Name": null,
                    "Description": null
                }
            ],
            "debugName": "Manager",
            "$type": "Framework.Managers.AchievementsManager+AchievementPersistenceData"
        },
        "ID_SKILLS": {
            "Skills": {
                "CHARGED_1": true,
                "CHARGED_2": false,
                "CHARGED_3": false,
                "COMBO_1": false,
                "COMBO_2": false,
                "COMBO_3": false,
                "LUNGE_1": true,
                "LUNGE_2": false,
                "LUNGE_3": false,
                "RANGED_1": false,
                "RANGED_2": false,
                "RANGED_3": false,
                "VERTICAL_1": false,
                "VERTICAL_2": false,
                "VERTICAL_3": false
            },
            "debugName": "Manager",
            "$type": "Framework.Managers.SkillManager+SkillsPersistenceData"
        },
        "ID_MAPS": {
            "reveal": {
                "D01_Z01": {
                    "filename": "D01_Z01_mask.png",
                    "elements": {
                        "3c6d3c9c-44c2-41cd-9c11-7c9f923680b9": {
                            "pos": {
                                "x": -743.0,
                                "y": 9.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D01_Z02": {
                    "filename": "D01_Z02_mask.png",
                    "elements": {
                        "2be08722-d222-4bbb-a027-575f3f5d5fdb": {
                            "pos": {
                                "x": -518.0,
                                "y": 11.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        },
                        "a4d97cdb-7cc1-4ed6-9b4f-cda008edb3b7": {
                            "pos": {
                                "x": -509.0,
                                "y": 0.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": false
                        },
                        "": {
                            "pos": {
                                "x": -519.9688,
                                "y": -3.0,
                                "z": 0.0
                            },
                            "element": "Teleport",
                            "activatedOrOpen": true
                        },
                        "57c0ac09-88ae-4a22-8e97-5280de0821a5": {
                            "pos": {
                                "x": -511.0,
                                "y": 1.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D01_Z03": {
                    "filename": "D01_Z03_mask.png",
                    "elements": {
                        "6f7ed359-8963-451b-a503-cf60be7d7cbf": {
                            "pos": {
                                "x": -300.0,
                                "y": 0.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": false
                        }
                    }
                },
                "D01_Z04": {
                    "filename": "D01_Z04_mask.png",
                    "elements": {
                        "1cbf1da0-c0b9-4745-bde0-77d41a27463b": {
                            "pos": {
                                "x": -119.0,
                                "y": -29.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        },
                        "0c160f00-3901-4bf2-b67f-99c2830819cf": {
                            "pos": {
                                "x": -140.0,
                                "y": -27.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        },
                        "dcb064ca-6adc-44a9-986a-6ba96dfc8ff7": {
                            "pos": {
                                "x": -48.0,
                                "y": -54.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        },
                        "f3cd147a-db3c-4338-9244-644fff60e7f6": {
                            "pos": {
                                "x": -140.0,
                                "y": -68.0,
                                "z": 0.0
                            },
                            "element": "Door",
                            "activatedOrOpen": true
                        },
                        "5ee167ae-8a5d-4933-a62f-78129bf6a1cc": {
                            "pos": {
                                "x": -148.0,
                                "y": -65.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": false
                        },
                        "01f3f021-eecd-45fd-834e-6e8871857a54": {
                            "pos": {
                                "x": -35.0,
                                "y": -100.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        },
                        "b6340e78-b722-4976-80bb-9461f82f5b43": {
                            "pos": {
                                "x": -77.0,
                                "y": -88.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        },
                        "19cc85e4-7f1f-4fd2-b56e-c582fed0e7bf": {
                            "pos": {
                                "x": -95.0,
                                "y": -86.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        },
                        "1a0f3713-ea34-4595-b408-c2efdaae2a3a": {
                            "pos": {
                                "x": 9.0,
                                "y": -110.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": false
                        },
                        "": {
                            "pos": {
                                "x": 20.03125,
                                "y": -101.0,
                                "z": 0.0
                            },
                            "element": "Teleport",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D01_Z05": {
                    "filename": "D01_Z05_mask.png",
                    "elements": {
                        "8daf15d5-f87e-48c5-977f-ee5e8a012233": {
                            "pos": {
                                "x": -167.0,
                                "y": -102.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D02_Z01": {
                    "filename": "D02_Z01_mask.png",
                    "elements": {
                        "d3e2f04e-0d36-4b65-8a84-df8f22818707": {
                            "pos": {
                                "x": -236.0,
                                "y": 50.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D02_Z02": {
                    "filename": "D02_Z02_mask.png",
                    "elements": {
                        "5bd1a831-b47e-4303-b898-c3ba367a857a": {
                            "pos": {
                                "x": -421.0,
                                "y": 96.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        }
                    }
                },
                "D17_Z01": {
                    "filename": "D17_Z01_mask.png",
                    "elements": {
                        "47db0007-4175-4379-8b5c-f37441f6315b": {
                            "pos": {
                                "x": -851.0,
                                "y": 9.0,
                                "z": 0.0
                            },
                            "element": "Reclinatory",
                            "activatedOrOpen": true
                        },
                        "ef833003-56b4-4f34-9530-16c88e6a4d66": {
                            "pos": {
                                "x": -778.0,
                                "y": 9.0,
                                "z": 0.0
                            },
                            "element": "Door",
                            "activatedOrOpen": false
                        },
                        "5add17e9-f2d9-416e-a0e9-925d32ac4798": {
                            "pos": {
                                "x": -772.0,
                                "y": 12.0,
                                "z": 0.0
                            },
                            "element": "Gate",
                            "activatedOrOpen": true
                        }
                    }
                }
            },
            "debugName": "Manager",
            "$type": "Framework.Managers.MapManager+MapPersistenceData"
        },
        "ID_GUILT": {
            "guiltDrops": [
                {
                    "id": "88045bb4-2ba0-40ae-94f3-c1d2414978d6",
                    "scene": "D02Z02S03",
                    "position": {
                        "x": -385.5481,
                        "y": 144.0,
                        "z": 0.0
                    },
                    "linkedIds": [],
                    "isLinked": false
                }
            ],
            "debugName": "Manager",
            "$type": "Framework.Managers.GuiltManager+GuiltPersistenceData"
        },
        "ID_TUTORIAL": {
            "Tutorials": {
                "10_FLASK": true,
                "11_SWORD_HEARTS": true,
                "12_ROSARY_BEAD": true,
                "13_CHERUBS": true,
                "14_PENITENCIA": true,
                "15_INVENTORY": true,
                "16_MAP": true,
                "17_RELICS": false,
                "1_RIPOSTE": true,
                "2_EXECUTION": true,
                "3_AIR_IMPULSE": true,
                "4_DASH": true,
                "5_PRAYERS": true,
                "6_PRIE-DIEU": true,
                "7_MEACULPA": true,
                "8_WALLCLIMB": true,
                "9_CULPA_SYSTEM": true
            },
            "TutorialsEnabled": true,
            "debugName": "Manager",
            "$type": "Framework.Managers.TutorialManager+TutorialPersistenceData"
        },
        "ID_STATS": {
            "currentValues": {
                "AttackSpeed": 1.0,
                "Fervour": 16.18005,
                "Life": 50.0,
                "Flask": 2.0,
                "Purge": 3433.822
            },
            "permanetBonus": {
                "AttackSpeed": 0.0,
                "Agility": 0.0,
                "Defense": 0.0,
                "DashCooldown": 0.0,
                "Fervour": 0.0,
                "Life": 0.0,
                "DashRide": 0.0,
                "Resistance": 0.0,
                "Strength": 4.0,
                "Speed": 0.0,
                "FervourStrength": 0.0,
                "Flask": 0.0,
                "BeadSlots": 0.0,
                "CriticalChance": 0.0,
                "CriticalMultiplier": 0.0,
                "DamageMultiplier": 0.0,
                "FlaskHealth": 0.0,
                "Purge": 0.0,
                "MeaCulpa": 1.0,
                "PurgeStrength": 0.0,
                "ParryWindow": 0.0,
                "FireDmgReduction": 0.0,
                "ToxicDmgReduction": 0.0,
                "MagicDmgReduction": 0.0,
                "LightningDmgReduction": 0.0,
                "RangedStrength": 0.0,
                "PrayerDurationAddition": 0.0,
                "PrayerStrengthMultiplier": 0.0,
                "PrayerCostAddition": 0.0,
                "ContactDmgReduction": 0.0,
                "ActiveRiposteWindow": 0.0,
                "AirImpulses": 0.0,
                "NormalDmgReduction": 0.0
            },
            "debugName": "Manager",
            "$type": "Gameplay.GameControllers.Entities.EntityStats+StatsPersistenceData"
        }
    },
    "sceneElements": {
        "d17z01s01": {
            "d430347e-1b33-4a35-82fb-ac7d2e1b4a01": {
                "cherubId": "RESCUED_CHERUB_06",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "2e4acbbb-09fd-437c-906c-8fd27e5d17cd": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S01E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0213e6bc-fc63-4a32-acb6-9e96dbc03e21": {
                "lighted": false,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            }
        },
        "d17z01s02": {
            "00d0e19a-32a3-4062-9485-102612089b71": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S05W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9e66f83f-cb36-4229-a2c1-3a1c0ecf9049": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S02E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d17z01s05": {
            "1cee4774-c92d-4a78-96a1-e133fb5f4a93": {
                "broken": false,
                "debugName": "ACT_TwistedSymbol_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "8cba30f2-09a4-47d5-93d0-1c1fc986412e": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z01S07W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9cd4bdb8-d813-4254-b366-7f3ce93052eb": {
                "broken": false,
                "debugName": "ACT_TwistedSymbol_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "1767d18b-6b39-4b58-826f-21db119ed679": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D17Z01S04N (S)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "2aabedeb-9f3f-4507-b878-395108a0535b": {
                "broken": false,
                "debugName": "ACT_Lantern_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "dd6a8381-914e-4651-b66a-8fee450e31bd": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S03E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "997b5591-7cd0-453d-8c89-f514444b3ac7": {
                "broken": false,
                "debugName": "ACT_Lantern_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "47db0007-4175-4379-8b5c-f37441f6315b": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            }
        },
        "d17z01s11": {
            "7675d9b9-79ab-48c4-b6ab-bb22233d5775": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S01NE (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "b288317c-fe3b-4069-8092-41b3bfa823f6": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z01S03W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d17z01s03": {
            "0d384626-0c8f-4749-9254-8ed0d2a80f32": {
                "broken": false,
                "debugName": "ACT_Lantern_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "5add17e9-f2d9-416e-a0e9-925d32ac4798": {
                "triggered": true,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "997b5591-7cd0-453d-8c89-f514444b3ac7": {
                "broken": false,
                "debugName": "ACT_Lantern_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "0cca4185-35ae-4b75-b208-627f92ccfe29": {
                "used": true,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "ef833003-56b4-4f34-9530-16c88e6a4d66": {
                "closed": true,
                "objectUsed": false,
                "debugName": "ACT_Door_Relic",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "2889a28b-44b6-4323-aab6-b8de4b2306b4": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S11E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "6df4dd39-4d86-44c3-8993-fbf626b7f35b": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S05W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z01s07": {
            "3c6d3c9c-44c2-41cd-9c11-7c9f923680b9": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            },
            "b30c5ccd-e441-4018-9ea6-820f16ec9661": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_D01Z01S01W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "4ab7239d-3dab-41bb-845f-f1c840fd75c8": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (2)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "66db316b-e84e-4df0-87c9-cb61dc0ff69e": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d01z01s01": {
            "9ad183b2-53fb-4bd2-911b-99279eb834e1": {
                "broken": false,
                "debugName": "ACT_HangedEskleton_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "d3c70d89-68a8-4c71-a0d1-dc87f2801a10": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1ba697d8-bc73-45b9-9bdf-9bc71a08af48": {
                "broken": true,
                "debugName": "ACT_HangedEskleton_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "16e884d9-e43b-4fe4-b33d-ff4c334b2dc6": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (2)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z01s02": {
            "86567210-c3a4-4f67-a349-6f97fa7cba9f": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "91ff4a89-6c76-4ffe-8f18-3b1f51622523": {
                "broken": false,
                "debugName": "ACT_HangedEskleton_breakable (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "e9cd7978-09c8-483f-be70-527c977e467b": {
                "broken": true,
                "debugName": "ACT_HangedEskleton_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "9082d3bd-0568-4908-9e5f-00044182cbc4": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "1ba697d8-bc73-45b9-9bdf-9bc71a08af48": {
                "broken": false,
                "debugName": "ACT_HangedEskleton_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "5710974d-771c-4907-8f1b-b318516ec0db": {
                "Consumed": true,
                "debugName": "ACT_Collectible (1)",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "09dc3301-0623-452f-96c4-6c9d019547e4": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z01s03": {
            "e4653878-1824-4b4b-b57c-e9685fe0964a": {
                "Life": 1.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "505b9a5f-9811-4427-9973-a5d5905a68f9": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e21c696e-61f5-4ef2-808a-cd0ccf852c0c": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "009b5edd-dd3a-436e-930d-1548a2a823f0": {
                "broken": false,
                "debugName": "ACT_HangedEskleton_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "1ba697d8-bc73-45b9-9bdf-9bc71a08af48": {
                "broken": true,
                "debugName": "ACT_HangedEskleton_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "5082226e-fcc9-4d90-bed0-9f6d4775fd75": {
                "AlreadyUsed": false,
                "debugName": "ACT_Iron Chest",
                "$type": "Tools.Level.Interactables.Chest+ChestPersistenceData"
            },
            "28444505-8988-48fb-bda6-377a32fa9935": {
                "triggered": false,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "16ff46c8-79c6-4d0c-8d93-a3d53283658b": {
                "broken": false,
                "debugName": "ACT_HangedEskleton_breakable (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "c0cc4135-d795-48bd-879e-a30c6d80297c": {
                "cherubId": "RESCUED_CHERUB_07",
                "destroyed": true,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            }
        },
        "d01z02s01": {
            "ecb0db91-4b42-4312-8095-832c0eebaec1": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z01S06E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "2be08722-d222-4bbb-a027-575f3f5d5fdb": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            },
            "1dd89225-b9e1-455a-aed9-46e7eb73ab84": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S02W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z02s02": {
            "bb5f8f73-b331-46fb-80bb-22f7484da2cc": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S01E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "363403e7-1b5a-4949-b72f-6c001021acae": {
                "triggered": false,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "0f7610b7-328e-4741-a795-25f2ba11065b": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S03NW (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "d402af99-cf62-4c4f-bc37-9a7d6f860a15": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "2ebf631a-24ab-4dcd-aafd-136d78d433eb": {
                "Life": 1.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "a737a7fc-a67e-46bc-9db5-9c394835ae94": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "acfc2c7e-9d30-4c95-8b17-85b8cd683f20": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S06E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "4dc8cb29-89bd-4ab3-bb2f-7d10385ee9aa": {
                "triggered": false,
                "debugName": "ACT_HiddenArea (1)",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "4280e6e5-18e4-4b1b-9ce5-3bae0b0d6565": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S03W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "924825a6-bcaf-4cee-8706-a3d565806f20": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z02S04W (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z02s03": {
            "f326992e-69da-4e21-8fc3-2bf398e7aafb": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z01S04S (N) - DESCENDING",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "b389b291-1fb6-4b26-8b48-10bda40ca9d0": {
                "cherubId": "RESCUED_CHERUB_08",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "7757172f-e050-46f6-bbbe-1fa3520dcce7": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S02NE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "de69a2ea-a51b-4c48-9326-bbe730a589c0": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "aa235418-d463-4a96-9ae8-d2b963e0e879": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S02E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e2b5d1b7-313c-43f8-a87e-69df8b626eea": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "fc8fdbed-84f5-47c9-8343-383eb44626a8": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z02S05W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5a7e307d-7267-4dfd-a45d-6819827ab852": {
                "triggered": false,
                "debugName": "ACT_Elevator",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "fbc9f820-7dab-4c86-a7bf-2bd7b8859b52": {
                "Consumed": false,
                "debugName": "ACT_ElevatorInteraction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d01z02s06": {
            "a99c68a3-cbcc-4a92-91ec-541fe6c4264c": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_D01Z02S02SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "32f33f94-417f-4606-a694-22d7a44450a3": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_D01Z02S07E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "a9610a7c-b850-4ec1-9012-365898b26bea": {
                "Consumed": false,
                "debugName": "ACT_MeaCulpaAltar",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "6e301a2d-4b9f-49ef-b967-929c5487385e": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_TeleportToChallenge",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z02s05": {
            "822d7c56-bab3-42d3-b4b6-71c7d95033d5": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "509072a9-0d58-4bcb-a025-3dadad6325e4": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "edfc0ce2-74d2-4062-b3cd-0e5cbf24729f": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z03s01": {
            "08b24276-55e8-414c-9ca7-55490a87fcc0": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "d3a2b630-721c-459b-87eb-4b4a8e74cf63": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "cfe09aef-6f51-470e-856b-e748d11107fe": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse4_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "dbf1adb9-7ac0-4b74-b1f9-38c2643f4eb0": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse3_breakable (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "661c3543-ecff-4022-949f-2bd08da96060": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse1_breakable (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "ec91372e-c93a-4327-acf2-1e4ba96fe242": {
                "used": true,
                "debugName": "GEO_Block_Actuable_Bridge(128x32)",
                "$type": "Tools.Level.Actionables.DestroyableBridge+DestroyableBridgePersistenceData"
            },
            "692fae17-3dbd-436f-aa1b-44f0dd5eea25": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse1_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "a1ea5a05-b583-4069-a889-41dd37907030": {
                "Life": -13.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "4d8087a6-6b8a-4b51-854b-a7a2251b7488": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "84b0a60f-df7d-47a8-9477-9d2f06b8e2f7": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse2_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "24e467ec-a0df-4bf4-b284-e8bede72eb55": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse3_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "04c2c82d-d15d-4daa-acd3-866b63878aa9": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse2_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "aa1939ea-2f04-4203-87d2-ea508a34de0a": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse4_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "b81cc65e-eec2-44ef-a4fc-0f43c4141211": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse3_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "ac8442c6-9e78-422d-9769-84908fa89ab5": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "a3cf5ea6-df0e-4c19-b562-c558b51fbe1d": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (2)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z03s02": {
            "b6b0827c-8340-4179-a4fc-12b036fa5344": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "d7313262-1609-4d27-ad42-8feb20472c0f": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1c6cb132-99c3-47b9-a43e-45fb38771a49": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (2)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "4693a90e-fc42-4e0b-97b6-fa0f099fba03": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "b466739d-af3c-47ec-ae80-f9336b08479b": {
                "Life": 1.0,
                "debugName": "GEO_FakeWallDetectableByRE02",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "bbaf880a-88d1-40d1-a1e5-e6b558be5b1c": {
                "used": false,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "eb02406b-734e-446a-8418-38880271df32": {
                "triggered": false,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "6e3686ca-f7eb-420a-9a66-2853e5a1a456": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z05S05N (S)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "6f7ed359-8963-451b-a503-cf60be7d7cbf": {
                "triggered": false,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            }
        },
        "d01z03s03": {
            "fb19930e-6f6d-4c95-8c1d-c2f5486073a3": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse1_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "a3c0f36c-6e6e-4c13-a39a-b4d67c9d9a83": {
                "broken": true,
                "debugName": "ACT_TwistedCorpse3_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "dd47d859-1a17-4462-a1a6-057ea4e2548e": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse4_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "75914932-821e-402a-88ec-1209458f3f4b": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "646493db-9ba6-40b9-a201-069595ead345": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "34838448-67be-402a-b745-aa328ce60c16": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_D01Z03S04SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "06492b0b-12cc-4015-9227-a784b8fd1495": {
                "cherubId": "RESCUED_CHERUB_10",
                "destroyed": true,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "be4c8d0b-3cb7-4b80-81de-8b18cde484b9": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e75a70e1-f30f-4752-95d1-7332a1727e35": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "d15c6f2a-33c0-4846-b34e-a2a24fdd138d": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse3_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "34088e50-17e6-49a2-b3da-5e85a26cbe28": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z03s04": {
            "0217bc38-4d6e-43b6-92a6-195fe64c6769": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (2)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "380ba5e4-90d9-45c6-9dbb-7e2288367ee8": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (4)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "491b94f4-a62d-4b69-81f0-7caae51fc1bc": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "c4d8f84f-d4a0-4fd8-8628-99d36dd79229": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_GeneralDoor (3)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "723e467a-c35c-493b-ac68-8647b1037ed5": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z03s05": {
            "aa211cd7-5763-4c32-91ac-7e8a112e7cd2": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1198ed58-cb85-4de3-a1a5-d6f85995eb11": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse3_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "314ae38e-6246-4413-828f-628f2b4c7523": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "88e32f2f-ea6e-46f5-8421-826357c747f6": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "cad13f65-1ca8-48df-ada0-e146fd4d25c7": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "2e1d3eb3-c8f3-4a6a-b44f-4fd69bd86928": {
                "broken": false,
                "debugName": "ACT_TwistedCorpse2_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "6b589b5e-d7e9-4926-9275-ed8225b448be": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s01": {
            "73ba8fd9-5421-46cf-aaf5-613eafa29012": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S05NW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1cbf1da0-c0b9-4745-bde0-77d41a27463b": {
                "triggered": true,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "2c7933eb-d922-4f5b-b2ec-ca6e6b4707bd": {
                "used": true,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "a87e49bd-62dc-4357-a9b5-c736d5087841": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S17W (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "a9a94392-5bb7-4ec7-8bc2-4cc90a601cfc": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "871373b5-6e46-46c9-9ff2-59ec24e5adba": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S05SW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e7ae4929-bc44-48ba-9c94-2445c2fe4a95": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S15N (S)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "97b12aeb-2a0c-4fd5-93cf-e2d0af52607c": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S03E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0cddaa9e-dfe8-4415-96e8-761aba3ba1f4": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "9cbdc2e3-f883-4dbc-b08b-b42d086a2c37": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z03S05E (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s17": {
            "52126b5c-6970-444a-9b7a-687d8f3695f6": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S01NE (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e78fca97-da3f-475c-b357-2c42a2e45b95": {
                "Consumed": false,
                "debugName": "ACT_Confessor_Altar",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "d365324f-bc9e-43ba-baec-c4b744e6dffd": {
                "Life": 69.0,
                "debugName": "ACT_ConfessorStatue",
                "$type": "Tools.Level.Actionables.PersistentBreakableObject+BreakablePersistentData"
            }
        },
        "d01z04s05": {
            "f62ed54e-4131-4a96-9c78-aaedabb331f7": {
                "broken": true,
                "debugName": "ACT_Chalice1 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "98336bad-d98f-40df-9030-934ee8382edb": {
                "triggered": true,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "0a0eb369-f0e2-4da0-a394-01dc4ae30cc4": {
                "broken": true,
                "debugName": "ACT_Chalice1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "2b99a463-141f-4472-8dde-8a8b19098a27": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_2 (3)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "0f787ee7-ee5e-41d6-b558-9f8140121af4": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "b5e15611-2339-42f5-ab5e-158dfe6113e4": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S01SE (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "661cb344-6a95-4cea-9001-d84910bef322": {
                "broken": true,
                "debugName": "ACT_Chalice5",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "ee1df10b-63ab-4f28-912d-e26a5753b18c": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S01E (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0f03dec1-275b-41c7-b8db-0fe5d326ae9c": {
                "Life": -13.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "b4f953a4-7ea4-44f4-8789-6ddde3b42c47": {
                "broken": true,
                "debugName": "ACT_Chalice3 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "e882ccea-f807-4c7a-a7ee-49e7264a9395": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d01z04s03": {
            "b3ed8fa6-5a91-4f69-aa11-8183682c9bc7": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S01W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0c160f00-3901-4bf2-b67f-99c2830819cf": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            }
        },
        "d01z04s15": {
            "736f0466-4f06-442e-ab0c-773fe65bca70": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z04S08E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "daf0bbde-1a5b-4354-88dd-84c59844bed5": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S09E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "c4e63045-5365-4b56-90b4-16d7729cd81d": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "afb69216-024c-40c8-9237-0ba382b35ec8": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_5 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "2cee7762-f4d0-42c1-9d11-c535e204d879": {
                "Life": 1.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "dde1b529-749f-4d70-b4d9-b0d1e860335d": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S01S (N)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "41efe0c7-489f-4892-8857-202a7377807d": {
                "triggered": true,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "d3515fcb-0c2b-45fd-ac91-6b467d040392": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "c605d407-66fd-4409-a1ed-5f2c69139066": {
                "triggered": false,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "9c2168bf-9237-4421-a84a-2bf7eee8929f": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S06SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "327ad0d9-79f8-426d-ad98-20371f0e2b79": {
                "used": true,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "a4a5290e-0921-469a-8a87-2c2f8fe44f43": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "28b1e26c-48f1-48c5-8a8d-b43ceef2096b": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_5",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "69f455b4-46a3-48d1-907f-10948ac0df9e": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S06NW (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "747f8cc3-d4ea-41d7-8662-e8bf7e9d1774": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S10NW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s06": {
            "6983b8ee-3bec-4bbd-9d3e-e8011218de5f": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "857d88e3-538b-4021-abcd-472db742a852": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S07W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "b72f0118-cfc8-4a34-abb9-a0c94f20af22": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "4a81b776-42a2-454e-9d53-4595e1296218": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_2 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "92d03334-0dbe-489e-b42a-219d0e199b4a": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S15E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5cd7ab38-cfd1-43e4-a2c4-337bae10ee5d": {
                "cherubId": "RESCUED_CHERUB_09",
                "destroyed": true,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "2e047add-87dc-4045-8ca2-a852ce9abc1d": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "71f3e915-2ee0-4998-a8d0-e1e6a6cb2562": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S15NE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9cb18524-62cb-445c-bc3d-d3bb80e452f8": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (3)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            }
        },
        "d01z04s07": {
            "c6f32f53-0c1f-4a5c-a190-1057a7105f83": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S06E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "a26f6067-cf09-4019-80ed-2741cb89de4e": {
                "AlreadyUsed": true,
                "debugName": "ACT_Wooden Chest",
                "$type": "Tools.Level.Interactables.Chest+ChestPersistenceData"
            }
        },
        "d01z04s09": {
            "bd2b748b-40d5-4ee1-b948-6e65e9e7076a": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z05S12E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9a7ceba2-3a61-4fcd-a62b-781dfbd6b79f": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S15SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5ee167ae-8a5d-4933-a62f-78129bf6a1cc": {
                "triggered": false,
                "debugName": "GateClosed",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "f3cd147a-db3c-4338-9244-644fff60e7f6": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01BZ02S01 (C)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01bz02s01": {
            "c620010a-394a-4fb2-bc8b-5d6ca6143d0a": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S09C (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "2ae6f802-bf22-48e7-97fc-7334f9dd177f": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "a927f0a1-0431-40f1-952e-87383c97194a": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d01z04s10": {
            "d03adced-7171-465f-89d9-f28474945f97": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S10SW (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "95132efb-6d33-497d-b4f3-c9086290e343": {
                "Life": -13.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "77b76fae-ddb5-4a67-8cfc-cf06209db3e5": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "425e5101-3c4d-4fd8-870c-6cdddab893a6": {
                "broken": true,
                "debugName": "ACT_Chalice1 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "ffbf027b-fa32-4f0b-87eb-647274969683": {
                "broken": false,
                "debugName": "ACT_Chalice5 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "6081c885-0b0c-4391-90ca-60a8c6833eb3": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "b856e7c3-e9e5-4c74-b18a-0f5c998c57fd": {
                "broken": false,
                "debugName": "ACT_Chalice1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "8fb73fa7-c8bd-4149-b9f5-6c6caba42942": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S15SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "55533394-601e-4689-b568-dd9093c648dd": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_5",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "297df614-5dc5-4dc3-b9ef-a7a21555635c": {
                "broken": false,
                "debugName": "ACT_Chalice5 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "d2c43dd6-39ef-474a-acb1-7717ce715fd5": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S12NW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "b13e08d2-3a27-4343-a472-66aab8c24cb0": {
                "triggered": true,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "b66b9a95-3ece-49cc-bbd2-d742fb3c5e78": {
                "broken": false,
                "debugName": "ACT_Chalice5",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            }
        },
        "d01z04s11": {
            "08755d6a-3b82-4371-b444-23e119064fb1": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S11NE (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "83d661e0-0523-4dee-8302-aab6da79b6ee": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "19cc85e4-7f1f-4fd2-b56e-c582fed0e7bf": {
                "triggered": true,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            }
        },
        "d01z04s12": {
            "20280b4d-2c1f-4ae2-b9af-fe6a7642c952": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (5)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "01f3f021-eecd-45fd-834e-6e8871857a54": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            },
            "0ccc06af-ac6c-43c1-9cd9-9f9ccfedd299": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S10SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "ebaabc6f-53d1-40ca-979f-f1fcbb818578": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_5 (3)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "3313f4e8-960e-4ccb-8195-69c91b498340": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_2 (4)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "52033233-a9b0-4d42-964b-00dffb53d073": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S13NW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "7b9ef61b-6000-428c-a2b8-0321613637b2": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S18E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s18": {
            "5567b4fe-a81b-44b1-994c-a27e83003100": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S19E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1a1d6f2c-dccb-4b32-952d-160d6174d92c": {
                "IsAlive": true,
                "Position": {
                    "x": 3.0,
                    "y": -0.0625,
                    "z": 0.0
                },
                "debugName": "BossPersistency",
                "$type": "Gameplay.GameControllers.Enemies.Framework.Persistence.PersistentEnemy+PietyPersistenceData"
            },
            "28ed103e-3743-40c2-b56c-065953cc28fa": {
                "lighted": true,
                "debugName": "ACT_FakePrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            },
            "35fbcb78-58e4-4392-ba8f-a037be28509e": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S12W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s19": {
            "99bc5335-069d-4bd7-9331-ac4c32ba49ab": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S18W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "99f1d262-b7eb-4e7e-b6eb-7a0678a8e3c0": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z05S19E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "22c0f081-b3a0-4310-8a40-9506d4a1315c": {
                "Consumed": false,
                "debugName": "ACT_PenitenceAltar",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d14z01s01": {
            "5b01f6a7-5ae1-4a92-a62b-530f241a181f": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "322da661-5774-4129-a4f7-9b544edb3f4b": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z05s19": {
            "4a9bb2cf-f739-407e-881a-b53652d3f2f9": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z05S15SE (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "7537c04d-3f7c-497f-a419-3255590ba03d": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S19W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "8daf15d5-f87e-48c5-977f-ee5e8a012233": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            }
        },
        "d01z04s13": {
            "98eafe95-57de-4d04-b28e-1219e7ef39e8": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "68d94f0b-6d35-4b73-86e2-dac9e4ac8633": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_D01Z04S17W (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "c96c7779-50ac-4f37-89f9-a1d01f42d5eb": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S12SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "693246da-1b7c-44ae-8a5b-320cc073b2fe": {
                "used": false,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "deccf930-0356-430e-85f9-31685ea74a48": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_5 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "8b9aa485-80a1-43d2-9b00-703a96e47f14": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_3 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "8d15de11-e663-4f55-8ab1-af397268756b": {
                "broken": false,
                "debugName": "ACT_Candleholder_breakable_3 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "156c747e-78e2-4fbc-b933-5f4636b539b3": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D01Z04S16W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9e2ceb6a-b2cf-4aa2-84a1-7cfbe7033b32": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_3",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "dc12313f-51e8-4400-b78c-07f1479c6f5b": {
                "broken": true,
                "debugName": "ACT_Candleholder_breakable_3 (3)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "1a0f3713-ea34-4595-b408-c2efdaae2a3a": {
                "triggered": false,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "082300c4-b30b-4a99-b076-c5cc98741bae": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S14E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s14": {
            "b6c775dc-e630-4521-b87f-d6a717bb4695": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "0091be41-7e53-489d-986a-957058b73ced": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S13SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z04s02": {
            "01be95b6-7e2d-4305-a429-1ecbed8dc850": {
                "Consumed": false,
                "debugName": "ACT_Teleport",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "12dd0b51-b5b5-44aa-976c-d0f4aa240a89": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z04S13NE (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z02s07": {
            "4d2d5c12-6e7b-4288-a599-d855ad693ce2": {
                "Consumed": false,
                "debugName": "ACT_Teleport",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "57c0ac09-88ae-4a22-8e97-5280de0821a5": {
                "triggered": true,
                "debugName": "Gate",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "a96c43f4-fc8e-4696-ad8d-1a6e8d334571": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "16bfa182-d418-411e-a5dd-7c72e11732cf": {
                "used": true,
                "debugName": "ACT_SHOCK_RECEIVER",
                "$type": "Tools.Level.Actionables.TriggerReceiver+TriggerReceiverPersistentData"
            },
            "4d681bc8-01cc-4ca0-8951-167901134717": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D17Z01S07W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d01z03s07": {
            "85357602-4c8f-4dfa-8799-51a6e81a657b": {
                "cherubId": "RESCUED_CHERUB_38",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "b5501cf6-112b-4d33-ade9-6e042cdab286": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_GeneralDoor (1)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "d5d6022e-7bb2-44f9-bd7e-950d4044d8a1": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "4c2ca263-18a3-4b4d-85d8-4ddfe9e5ef8c": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d02z01s01": {
            "00e7dc54-d8e8-4b2c-ad1d-7d41897909e5": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_CherubsR",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "7d8b8ada-bf3e-4e88-a8e7-ed2321641d4f": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_CherubsL",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "d7d08e9a-8ab4-4828-9d26-66f0c4365a20": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z03S04W (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "4318ce6c-db2d-44f6-b7ab-0de1493649dc": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S02E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "d3e2f04e-0d36-4b65-8a84-df8f22818707": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            },
            "1ab8348a-23de-460f-91f3-8a00e1d7a58c": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z01S06E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "07cbe4db-53be-463d-b314-7396fcf46bcf": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "ff9db11e-e3b1-4690-9cc6-fdda42ac79e0": {
                "Consumed": false,
                "debugName": "ACT_Interaction",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        },
        "d02z01s02": {
            "63470eb9-9122-4273-ab25-c8712b61502f": {
                "broken": false,
                "debugName": "ACT_HangedCage1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "d5c0db33-ae72-4d0c-aca0-06295937726b": {
                "broken": true,
                "debugName": "ACT_HangedCage2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "94f527ab-7f15-46ef-b922-df586c7e443e": {
                "broken": false,
                "debugName": "ACT_HangedCage1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "3e211890-b7be-4f41-9930-014eaad8fd89": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "cc44b3dd-f947-4f86-9308-6bbbb59e9f34": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S04E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "ffe1b292-80a0-487e-8528-faff780da147": {
                "broken": true,
                "debugName": "ACT_HangedCage1 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "af2cf516-a88b-4ee3-8721-8235bf16582d": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z01S09W (NE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "20fb85a2-7f94-490f-938d-e4d092bb8588": {
                "broken": true,
                "debugName": "ACT_HangedCage2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "bec431c5-df10-43cd-bc4e-40f26dea390d": {
                "broken": true,
                "debugName": "ACT_HangedCage1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "4450aef1-2571-4514-84e2-e0c7113879e2": {
                "broken": false,
                "debugName": "ACT_HangedCage2 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "f4e234e9-5166-404b-b710-e7934b7f1d53": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S03SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5d7525a1-3baa-4e4a-88f4-645e8d3818d9": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S01W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "6d82cb77-1a18-4462-b1c1-a5a6ab137d9c": {
                "broken": false,
                "debugName": "ACT_HangedCage1 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "0495cb35-3807-433b-b82f-23a45692ba83": {
                "cherubId": "RESCUED_CHERUB_23",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            }
        },
        "d02z01s04": {
            "250622e7-11aa-4554-a0c2-aedc2ee1fed3": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "73a4238a-6688-40f9-b56d-6830e5b540d1": {
                "Consumed": false,
                "debugName": "ACT_GeminoTomb",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "153af7e2-00b4-4c97-ad8e-6c1150c8686b": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z01S08N",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "e35acd90-6696-4c86-a49e-5237fae2477b": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S02W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d02z01s03": {
            "4e33139d-2ef6-4d98-8cd6-c37e91f56f55": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S02NW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "356960c3-3a28-4563-a63b-06e15ef09832": {
                "broken": false,
                "debugName": "ACT_HangedCage2 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "4550b6df-c107-406c-ba3b-130c30d59e8c": {
                "broken": false,
                "debugName": "ACT_HangedCage2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "e89d7fa0-64f8-4550-aa55-da3e1e2738c9": {
                "broken": false,
                "debugName": "ACT_HangedCage2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "2135f94c-5143-4537-bb3a-92e2a651c35b": {
                "broken": false,
                "debugName": "ACT_HangedCage1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "6fde8db6-8547-4f4f-9171-7e1dc7cf9ad7": {
                "broken": false,
                "debugName": "ACT_HangedCage1 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "a5c78cd2-d027-4415-a868-b9f675163465": {
                "broken": false,
                "debugName": "ACT_HangedCage1 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "51a32f48-c7dd-46cb-ad32-065a40a9aa50": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S01E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0ca4627a-2afc-439a-8cf3-a498f118c93a": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S05E (SW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d02z01s05": {
            "dc073c3a-6462-4afc-99c6-c0e146599ebc": {
                "broken": true,
                "debugName": "ACT_HangedCage1 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "26156eb3-6b5d-4d2d-af31-22a0d6c8dbbe": {
                "broken": true,
                "debugName": "ACT_HangedCage1 (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "6a14996b-ccfd-49b6-a5e1-382cf9537a5a": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D01Z01S03SW (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "aff230c0-eaa1-4401-b248-baf70eb9ce44": {
                "Consumed": true,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "0c5824de-993c-48d1-a090-bcae1ffa51fe": {
                "broken": true,
                "debugName": "ACT_HangedCage2",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "c3a1ecfd-8937-41ed-bb03-191fe78f04ad": {
                "broken": true,
                "debugName": "ACT_HangedCage1",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "4befe9d8-8647-49f2-9b94-d92c1596b964": {
                "broken": true,
                "debugName": "ACT_HangedCage2 (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            }
        },
        "d02z02s01": {
            "16b4a178-c907-4640-a6c4-84082b1c3a41": {
                "broken": false,
                "debugName": "ACT_FrozenNovice1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "d87dc4b8-6a65-4371-b0d2-2e28674e15af": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S08E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "30faf1e1-b4c6-4fa2-a087-65b8d2dac2a2": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S02SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "259e4244-254a-45e3-9ba1-35e3e166e7b8": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "aa9baf57-fef6-4192-83db-d46387342964": {
                "broken": true,
                "debugName": "ACT_FrozenNovice1_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "5c087cc1-f7b2-4cdd-8ac0-e58c6b01cde3": {
                "broken": false,
                "debugName": "ACT_FrozenNovice2_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "160bfe4d-4ae4-472c-826c-f67736101151": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z01S03W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d02z02s08": {
            "ec75430b-dc1f-4ca0-934c-622dbe56cc13": {
                "Consumed": false,
                "debugName": "ACT_Collectible (1)",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "97fabda4-0830-4395-ba5d-1357c4ac7348": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z02S11E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "da9b3c21-d9ea-4c56-9b3b-7405baf009a3": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02BZ02S01 (C)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "9bed668f-a47e-4ff5-8378-e95be7430961": {
                "Life": 1.0,
                "debugName": "GEO_DestroyableBlock (32x128)",
                "$type": "Tools.Level.Actionables.BreakableWall+WallPersistenceData"
            },
            "8cc5753d-ba68-4b47-a993-e3704de4ea47": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_CherubsL",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5accd929-dc75-4331-9139-c22051303e0f": {
                "triggered": false,
                "debugName": "ACT_HiddenArea",
                "$type": "Tools.Gameplay.BasicPersistence"
            },
            "db353b69-7485-4e1f-af8e-15fd24cb2d58": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S01W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "2c866895-9fc8-432a-9f34-b2dfc6089aeb": {
                "cherubId": "RESCUED_CHERUB_31",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "468a40fc-64bc-4439-a9d5-bceb81459fa8": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_CherubsR",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "5bd1a831-b47e-4303-b898-c3ba367a857a": {
                "lighted": true,
                "debugName": "ACT_PrieDieu",
                "$type": "Tools.Level.Interactables.PrieDieu+PrieDieuPersistenceData"
            }
        },
        "d02z02s02": {
            "8ef81457-4758-421e-84f1-318952af9562": {
                "broken": true,
                "debugName": "ACT_FrozenNovice1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "9cafdf19-6824-4cc6-ae53-10b91463c9c1": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S03W (E)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "71adbccc-ae07-4995-9324-ad4499e585d2": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_CherubsR",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1d43eeeb-d315-42cb-aeda-14c4c8a670a3": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_CherubsDown",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "1337bb38-e1b2-41be-a7fb-00fb60612d59": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_CherubsL",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "0a5f2c5c-ab2b-45f4-b005-4d03fa5e78ac": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z02S04SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "ab1cb9b9-7a01-4324-abda-a05287108f0f": {
                "broken": false,
                "debugName": "ACT_FrozenNovice2_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "b3e9cc99-28bb-46a5-be22-6e9896916ebc": {
                "cherubId": "RESCUED_CHERUB_24",
                "destroyed": false,
                "debugName": "SPAWN_CHERUB",
                "$type": "CherubCaptorPersistentObject+CherubSpawnPersistenceData"
            },
            "6430f113-1365-463b-a9c8-6fce61a0e4e4": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S01NW (SE)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            }
        },
        "d02z02s03": {
            "d50042c9-3887-41ce-9773-fb84050e30bc": {
                "broken": false,
                "debugName": "ACT_FrozenNovice2_breakable (2)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "611b9d1a-b37a-415d-bce6-e7cadc89c4aa": {
                "Consumed": false,
                "debugName": "ACT_Collectible (1)",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "f9b2c8a6-6c43-4966-b876-2d93bd0ab095": {
                "Consumed": false,
                "debugName": "ACT_Collectible",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            },
            "9228d9d3-e679-4695-bc23-714bea0ed17f": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_D02Z02S05SE (NW)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "110968be-bb74-4e02-9ae6-eb8a956ea716": {
                "closed": false,
                "objectUsed": true,
                "debugName": "ACT_Door_D02Z02S02E (W)",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "c8ec24f7-fc47-478b-9652-40a00ece53f8": {
                "closed": false,
                "objectUsed": false,
                "debugName": "ACT_Door_Cherubs",
                "$type": "Tools.Level.Interactables.Door+DoorPersistenceData"
            },
            "960a73ea-a94e-4db9-ab62-cd79a5ef6589": {
                "broken": false,
                "debugName": "ACT_FrozenNovice2_breakable (1)",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "2005873b-b7f9-4bc1-932a-f2dc566c1076": {
                "broken": false,
                "debugName": "ACT_FrozenNovice1_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "7a76d4c9-f478-4370-82a3-01dcb97509b7": {
                "broken": false,
                "debugName": "ACT_FrozenNovice2_breakable",
                "$type": "Tools.Level.Actionables.BreakableObject+BreakablePersistenceData"
            },
            "309bceef-8798-48a3-ad98-650f613d456f": {
                "Consumed": false,
                "debugName": "ACT_Collectible (2)",
                "$type": "Tools.Level.Interactable+InteractablePersistence"
            }
        }
    }
}